{"version":3,"sources":["auth.js"],"names":["jwt","require","config","auth","req","next","token","res","status","json","success","message","decode","verify","process","env","JWT_SECRET","console","user","e","log","err","exports","isStudent","role","isAdmin"],"mappings":"aAAA,IAAMA,IAAMC,QAAQ,gBACpBA,QAAQ,UAAUC,SAAlBD,QAAQE,KAAA,SAADC,EAAWF,EAAlBG,GAII,IADIF,IAARG,EAAeF,EAACA,KAAKG,MAKb,IAAKD,EAAAA,OAAOC,EAAAC,OAAA,KAAAC,KAAA,CACEC,SAAQ,EACPC,QADiB,kBAOhC,IAAI,IAAAC,EAAAZ,IAAAa,OAAAP,EAAAQ,QAAAC,IAAAC,YAGAC,QAAYL,IAAZA,GAIJR,EAAUc,KAAAN,EAEFF,MAAOS,GACPR,OAASJ,EAAAC,OAAA,KAAAC,KAAA,CAFbC,SAAA,EAIHC,QAAA,qBAKDM,IAEIP,MAAAA,GADJ,OAEIC,QAASS,IAAAC,GAFbd,EAAAC,OAAA,KAAAC,KAAA,CAIHC,SAAA,EAnCLC,QAAA,iDAyCYW,QAAAC,UAAWf,SAAAA,EAAOD,EAAKE,GACnBC,IACAC,GAAS,YAATA,EAAOO,KAAEM,KAFb,OAAAjB,EAAAC,OAAA,KAAAC,KAAA,CAIHC,SAAA,EAFOC,QAAS,+DAMjBN,IAEIM,MAAAA,GAFJ,OAAAJ,EAAAC,OAAA,KAAAC,KAAA,CAIHC,SAAA,EAfLC,QAAA,gCAqBYW,QAAAG,QAAWjB,SAAAA,EAAOD,EAAKE,GACnBC,IACAC,GAAS,UAATA,EAAOO,KAAEM,KAFb,OAAAjB,EAAAC,OAAA,KAAAC,KAAA,CAIHC,SAAA,EAFOC,QAAS,6DAMjBN,IAEIM,MAAAA,GAFJ,OAAAJ,EAAAC,OAAA,KAAAC,KAAA,CAIHC,SAAA,EAfLC,QAAA","file":"auth.min.js","sourcesContent":["const jwt = require(\"jsonwebtoken\")\nrequire(\"dotenv\").config();\n\n\nexports.auth = (req, res, next) => {\n    try {\n        const token = req.body.token;\n        // const token = req.cookie.token \n\n        if (!token) {\n            return res.status(401).json({\n                success: false,\n                message: \"token missing\"\n            })\n        }\n\n        // verify the token \n        try {\n            const decode = jwt.verify(token, process.env.JWT_SECRET);\n\n            console.log(decode)\n\n            req.user = decode;\n        }\n        catch (e) {\n            return res.status(401).json({\n                success: false,\n                message: \"token is invalid\"\n            })\n        }\n\n        next();\n    }\n    catch (err) {\n        console.log(err)\n        return res.status(401).json({\n            success: false,\n            message: \"Something went wrong while verifying token\"\n        })\n    }\n}\n\nexports.isStudent = (req, res, next) => {\n    try {\n        if (req.user.role !== \"Student\") {\n            return res.status(401).json({\n                success: false,\n                message: \"This is a protect route for students you can not access it\"\n            })\n        }\n        next();\n    }\n    catch (err) {\n        return res.status(500).json({\n            success: false,\n            message: \"User Role is not Matching\"\n        })\n    }\n}\n\nexports.isAdmin = (req, res, next) => {\n    try {\n        if (req.user.role !== \"Admin\") {\n            return res.status(401).json({\n                success: false,\n                message: \"This is a protect route for Admins,you can not access it\"\n            })\n        }\n        next();\n    }\n    catch (err) {\n        return res.status(500).json({\n            success: false,\n            message: \"User Role is not Matching\"\n        })\n    }\n}"]}