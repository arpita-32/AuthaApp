{"version":3,"sources":["auth.js"],"names":["jwt","require","config","exports","auth","req","res","next","token","body","status","json","success","message","decode","verify","process","env","JWT_SECRET","console","log","user","e","err","isStudent","role","isAdmin"],"mappings":";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAGAC,OAAO,CAACC,IAAR,GAAe,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,MAAI;AACA,QAAMC,KAAK,GAAGH,GAAG,CAACI,IAAJ,CAASD,KAAvB,CADA,CAEA;;AAEA,QAAI,CAACA,KAAL,EAAY;AACR,aAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAE,KADe;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAArB,CAAP;AAIH,KATD,CAWA;;;AACA,QAAI;AACA,UAAMC,MAAM,GAAGd,GAAG,CAACe,MAAJ,CAAWP,KAAX,EAAkBQ,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAf;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AAEAT,MAAAA,GAAG,CAACgB,IAAJ,GAAWP,MAAX;AACH,KAND,CAOA,OAAOQ,CAAP,EAAU;AACN,aAAOhB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAE,KADe;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAArB,CAAP;AAIH;;AAEDN,IAAAA,IAAI;AACP,GA3BD,CA4BA,OAAOgB,GAAP,EAAY;AACRJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,WAAOjB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAE,KADe;AAExBC,MAAAA,OAAO,EAAE;AAFe,KAArB,CAAP;AAIH;AACJ,CApCD;;AAsCAV,OAAO,CAACqB,SAAR,GAAoB,UAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpC,MAAI;AACA,QAAIF,GAAG,CAACgB,IAAJ,CAASI,IAAT,KAAkB,SAAtB,EAAiC;AAC7B,aAAOnB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAE,KADe;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAArB,CAAP;AAIH;;AACDN,IAAAA,IAAI;AACP,GARD,CASA,OAAOgB,GAAP,EAAY;AACR,WAAOjB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAE,KADe;AAExBC,MAAAA,OAAO,EAAE;AAFe,KAArB,CAAP;AAIH;AACJ,CAhBD;;AAkBAV,OAAO,CAACuB,OAAR,GAAkB,UAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClC,MAAI;AACA,QAAIF,GAAG,CAACgB,IAAJ,CAASI,IAAT,KAAkB,OAAtB,EAA+B;AAC3B,aAAOnB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAE,KADe;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAArB,CAAP;AAIH;;AACDN,IAAAA,IAAI;AACP,GARD,CASA,OAAOgB,GAAP,EAAY;AACR,WAAOjB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAE,KADe;AAExBC,MAAAA,OAAO,EAAE;AAFe,KAArB,CAAP;AAIH;AACJ,CAhBD","sourcesContent":["const jwt = require(\"jsonwebtoken\")\nrequire(\"dotenv\").config();\n\n\nexports.auth = (req, res, next) => {\n    try {\n        const token = req.body.token;\n        // const token = req.cookie.token \n\n        if (!token) {\n            return res.status(401).json({\n                success: false,\n                message: \"token missing\"\n            })\n        }\n\n        // verify the token \n        try {\n            const decode = jwt.verify(token, process.env.JWT_SECRET);\n\n            console.log(decode)\n\n            req.user = decode;\n        }\n        catch (e) {\n            return res.status(401).json({\n                success: false,\n                message: \"token is invalid\"\n            })\n        }\n\n        next();\n    }\n    catch (err) {\n        console.log(err)\n        return res.status(401).json({\n            success: false,\n            message: \"Something went wrong while verifying token\"\n        })\n    }\n}\n\nexports.isStudent = (req, res, next) => {\n    try {\n        if (req.user.role !== \"Student\") {\n            return res.status(401).json({\n                success: false,\n                message: \"This is a protect route for students you can not access it\"\n            })\n        }\n        next();\n    }\n    catch (err) {\n        return res.status(500).json({\n            success: false,\n            message: \"User Role is not Matching\"\n        })\n    }\n}\n\nexports.isAdmin = (req, res, next) => {\n    try {\n        if (req.user.role !== \"Admin\") {\n            return res.status(401).json({\n                success: false,\n                message: \"This is a protect route for Admins,you can not access it\"\n            })\n        }\n        next();\n    }\n    catch (err) {\n        return res.status(500).json({\n            success: false,\n            message: \"User Role is not Matching\"\n        })\n    }\n}"],"file":"auth.dev.js"}